(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{421:function(t,s,e){"use strict";e.r(s);var a=e(42),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"打包插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打包插件"}},[t._v("#")]),t._v(" 打包插件")]),t._v(" "),e("p",[t._v("VS Code 插件体积常常随着更新越来越大，它会产生很多文件，而且还依赖各种"),e("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),e("OutboundLink")],1),t._v("包。\n程序开发的最佳实践是抽象和重用，但过度拆分和庞大的代码结构产生的代价就是更大的插件体积和更慢的运行效率。加载 100 个小文件远比加载一个大文件来的慢，这就是我们更推荐打包插件的原因。\n"),e("em",[t._v("打包")]),t._v("是将多个小的源文件打包成单个入口文件的过程。")]),t._v(" "),e("p",[t._v("对于 Javascript 而言，可选的构建工具非常多，比较流行的如"),e("a",{attrs:{href:"https://rollupjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("rollup.js"),e("OutboundLink")],1),t._v("，"),e("a",{attrs:{href:"https://parceljs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("parcel"),e("OutboundLink")],1),t._v("和"),e("a",{attrs:{href:"https://webpack.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack"),e("OutboundLink")],1),t._v("。大部分构建工具的概念和功能都是相似的，本节主要使用"),e("strong",[t._v("webpack")]),t._v("打包。")]),t._v(" "),e("h2",{attrs:{id:"使用-webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-webpack"}},[t._v("#")]),t._v(" 使用 webpack")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("webpack 这个开发工具可以在"),e("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),e("OutboundLink")],1),t._v("里找到，为了获取 webpack 和它的命令行界面，打开终端然后输入：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i --save-dev webpack webpack-cli\n")])])]),e("p",[t._v("这行命令会先安装 webpack，然后更新你插件里的"),e("code",[t._v("package.json")]),t._v("中的"),e("code",[t._v("devDependencies")]),t._v("字段。Webpack 是一个 Javascrip 打包工具，但是大部分 VS Code 插件是用 Typescript 写的，所以你需要在 webpack 中配置"),e("code",[t._v("ts-loader")]),t._v("，它才能正确编译 Typescript。安装"),e("code",[t._v("ts-loader")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i --save-dev ts-loader\n")])])]),e("h2",{attrs:{id:"配置-webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-webpack"}},[t._v("#")]),t._v(" 配置 webpack")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("既然所有的工具都安装好了，我们现在可以开始配置 webpack 了。通常来说，你的项目目录中需要创建一个"),e("code",[t._v("webpack.config.js")]),t._v("文件，webpack 才能知道按什么规则打包你的插件。下面的配置示例是 VS Code 插件专用的，让我们来开这个头吧：")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//@ts-check")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**@type {import('webpack').Configuration}*/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  target"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vscode插件运行在Node.js环境中 📖 -> https://webpack.js.org/configuration/node/")]),t._v("\n\n  entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/extension.ts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件的入口文件 📖 -> https://webpack.js.org/configuration/entry-context/")]),t._v("\n  output"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打包好的文件储存在'dist'文件夹中 (请参考package.json), 📖 -> https://webpack.js.org/configuration/output/")]),t._v("\n    path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dist"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extension.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    libraryTarget"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commonjs2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    devtoolModuleFilenameTemplate"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../[resource-path]"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  devtool"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source-map"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  externals"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    vscode"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commonjs vscode"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vscode-module是热更新的临时目录，所以要排除掉。 在这里添加其他不应该被webpack打包的文件, 📖 -> https://webpack.js.org/configuration/externals/")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  resolve"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 支持读取TypeScript和JavaScript文件, 📖 -> https://github.com/TypeStrong/ts-loader")]),t._v("\n    extensions"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('".ts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('".js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  module"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rules"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        test"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.ts$/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        exclude"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/node_modules/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        use"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            loader"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ts-loader"')]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("这份文件是"),e("a",{attrs:{href:"https://github.com/Microsoft/vscode-extension-samples/blob/master/webpack-sample",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack-extension"),e("OutboundLink")],1),t._v("中的"),e("a",{attrs:{href:"https://github.com/Microsoft/vscode-extension-samples/blob/master/webpack-sample/webpack.config.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("一部分"),e("OutboundLink")],1),t._v("。webpack 配置最后输出的就是 JS 对象。")]),t._v(" "),e("p",[t._v("在上面的例子里，我们定义了如下内容：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("traget")]),t._v("：'node'，因为我们的插件运行在 Node.js 环境中。")]),t._v(" "),e("li",[e("code",[t._v("entry")]),t._v("：webpack 使用的入口文件。这就像是"),e("code",[t._v("package.json")]),t._v("中的"),e("code",[t._v("main")]),t._v('属性，有点不一样的是你还需要给 webpack 提供"source"—— 一般就是'),e("code",[t._v("src/extension.ts")]),t._v('，小心不要配置在"output"里了。webpack 可以解析 Typescript，所以我们不需要再单独执行 Typescript 编译了。')]),t._v(" "),e("li",[e("code",[t._v("output")]),t._v("配置告诉 webpack 应该把打包好的文件放在哪里，一般而言我们会放在"),e("code",[t._v("dist")]),t._v("文件夹里。在这个例子里，webpack 最后会产生一个"),e("code",[t._v("dist/extension.js")]),t._v("文件。")]),t._v(" "),e("li",[t._v("在"),e("code",[t._v("resolve")]),t._v("和"),e("code",[t._v("module/rules")]),t._v("中配置 Typescript 和 Javascript 的解析器。")]),t._v(" "),e("li",[e("code",[t._v("externals")]),t._v("即排除配置，在这里可以配置打包文件不应包含的文件和模块。"),e("code",[t._v("vscode")]),t._v("不需要被打包是因为它并不储存在磁盘上，它是 VS Code 热更新生成的临时文件夹。根据插件依赖的具体 node 模块，你可能需要通过这个配置优化打包文件。")])]),t._v(" "),e("h2",{attrs:{id:"运行-webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行-webpack"}},[t._v("#")]),t._v(" 运行 webpack")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("code",[t._v("webpack.config.js")]),t._v("文件创建好之后，webpack 就可以正式开始工作了。你可以从命令行中运行 webpack，不过为了避免重复工作用 npm script 会更有效率。")]),t._v(" "),e("p",[t._v("将下列脚本复制到"),e("code",[t._v("package.json")]),t._v("的"),e("code",[t._v("scripts")]),t._v("中去：")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode:prepublish"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack --mode production"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"compile"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack --mode none"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"watch"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack --mode none --watch"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),e("p",[e("code",[t._v("compile")]),t._v("和"),e("code",[t._v("watch")]),t._v("脚本是开发时使用的，它们会产生构建文件。"),e("code",[t._v("vscode:prepublish")]),t._v("是"),e("code",[t._v("vsce")]),t._v("使用的，"),e("code",[t._v("vsce")]),t._v("是 VS Code 的打包和发布工具，你需要在发布插件之前运行这个命令。webpack 中的"),e("a",{attrs:{href:"https://webpack.js.org/concepts/mode/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mode"),e("OutboundLink")],1),t._v("是控制优化级别的配置项，如果你使用"),e("code",[t._v("production")]),t._v("字段，那么就会打包出最小的构建文件，但是也会耗费更多时间，所以我们开发中使用"),e("code",[t._v("none")]),t._v("。想要运行上述脚本，我们可以打开终端（命令行）输入"),e("code",[t._v("npm run compile")]),t._v("或者从"),e("em",[t._v("命令面板")]),t._v("（"),e("kbd",[t._v("Ctrl+Shift+P")]),t._v("）中使用"),e("strong",[t._v("运行任务")]),t._v("来开始。")]),t._v(" "),e("h2",{attrs:{id:"运行插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行插件"}},[t._v("#")]),t._v(" 运行插件")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("运行插件之前，你需要将"),e("code",[t._v("package.json")]),t._v("中的"),e("code",[t._v("main")]),t._v("属性指向到构建文件上，也就是我们上面提到的"),e("a",{attrs:{href:"https://github.com/Microsoft/vscode-references-view/blob/d649d01d369e338bbe70c86e03f28269cbf87027/package.json#L26",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v('"./dist/extension"')]),e("OutboundLink")],1),t._v("，改好之后我们就可以运行和测试插件了。关于调试配置，请注意更新"),e("code",[t._v("launch.json")]),t._v("中的"),e("code",[t._v("outFiles")]),t._v("属性。")]),t._v(" "),e("h2",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("插件开发者一般都会给插件源代码进行单元测试，但是有了完备的底层架构支持，插件的源代码可以不依赖测试，webpack 产生的构建文件中也不应该包含任何测试代码。如果需要运行单元测试，只需要简单地编译就好了。在上面的例子里，我们有一个"),e("code",[t._v("test-compile")]),t._v("脚本，它会把调用 Typescript 编译器将插件编译至"),e("code",[t._v("out")]),t._v("目录中。这样一来我们就有了 JS 文件，再使用下面的"),e("code",[t._v("launch.json")]),t._v("就足够应付测试了。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Extension Tests"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extensionHost"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"runtimeExecutable"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${execPath}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"args"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--extensionDevelopmentPath=${workspaceFolder}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--extensionTestsPath=${workspaceFolder}/out/test"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outFiles"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceFolder}/out/test/**/*.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"preLaunchTask"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm: test-compile"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("这个测试配置对于非 webpack 打包的插件来说也是可以使用的。我们没必要将单元测试打包起来，因为它们不应包含在我们发布的插件里。")]),t._v(" "),e("h2",{attrs:{id:"发布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布"}},[t._v("#")]),t._v(" 发布")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("发布前你需要更新"),e("code",[t._v(".vscodeignore")]),t._v("文件。现在所有东西都打包到了"),e("code",[t._v("dist/extension.js")]),t._v("文件中，所以应该排除这个文件还有"),e("code",[t._v("out")]),t._v("文件夹（怕你漏了，特此提醒），以及最重要的"),e("code",[t._v("node_modules")]),t._v("文件夹。")]),t._v(" "),e("p",[t._v("一般来说，"),e("code",[t._v(".vsignore")]),t._v("文件应该是这样的：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v(".vscode\nnode_modules\nout/\nsrc/\ntsconfig.json\nwebpack.config.js\n")])])]),e("h2",{attrs:{id:"迁移插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#迁移插件"}},[t._v("#")]),t._v(" 迁移插件")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("用 webpack 迁移现有的插件是很容易的，整个过程就像我们上面的指南一样。真实的例子如 VS Code 的 References 视图就是从这个"),e("a",{attrs:{href:"https://github.com/Microsoft/vscode-references-view/pull/50",target:"_blank",rel:"noopener noreferrer"}},[t._v("pull request"),e("OutboundLink")],1),t._v("应用了 webpack 而来的。")]),t._v(" "),e("p",[t._v("在里面，你可以看到：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("devDependencies")]),t._v("中添加"),e("code",[t._v("webpack")]),t._v("，"),e("code",[t._v("webpack-cli")]),t._v("和"),e("code",[t._v("ts-loader")])]),t._v(" "),e("li",[t._v("更新 npm 脚本以便开发时使用 webpack")]),t._v(" "),e("li",[t._v("更新调试配置文件"),e("code",[t._v("launch.json")])]),t._v(" "),e("li",[t._v("添加和修改"),e("code",[t._v("webpack.config.js")])]),t._v(" "),e("li",[t._v("更新"),e("code",[t._v(".vscodeignore")]),t._v("排除"),e("code",[t._v("node_modules")]),t._v("和其他开发时产生的临时文件")]),t._v(" "),e("li",[t._v("开始享受体积更小、安装更快的插件！")])]),t._v(" "),e("h2",{attrs:{id:"疑难解答"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#疑难解答"}},[t._v("#")]),t._v(" 疑难解答")]),t._v(" "),e("hr"),t._v(" "),e("h4",{attrs:{id:"压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#压缩"}},[t._v("#")]),t._v(" 压缩")]),t._v(" "),e("p",[t._v("使用"),e("code",[t._v("production")]),t._v("模式会执行代码压缩，它会去除源代码中的空格和注释，并把变量名和函数名进行替换——混淆和压缩。不过形如"),e("code",[t._v("Function.prototype.name")]),t._v("的代码不会压缩。")]),t._v(" "),e("h4",{attrs:{id:"webpack-critical-dependencies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack-critical-dependencies"}},[t._v("#")]),t._v(" webpack critical dependencies")]),t._v(" "),e("p",[t._v("当你运行 webpack 时，你可能会碰到像"),e("strong",[t._v("Critical dependencies: the request of a dependency is an expression")]),t._v("字样的警告。这些警告必须立即处理，一般来说会影响到打包过程。这句话意味着 webpack 不能静态分析某些依赖，一般是由动态使用"),e("code",[t._v("require")]),t._v("导致的，比如"),e("code",[t._v("require(someDynamicVariable)")]),t._v("。")]),t._v(" "),e("p",[t._v("想要处理这类警告，你需要：")]),t._v(" "),e("ul",[e("li",[t._v("将需要打包的部分变成静态的依赖。")]),t._v(" "),e("li",[t._v("通过"),e("code",[t._v("externals")]),t._v("排除这部分依赖，但是注意它们的 Javascript 文件还是应该保留在我们打包的插件里，在"),e("code",[t._v(".vscodeignore")]),t._v("中使用 glob 模式，比如"),e("code",[t._v("!node_modules/mySpecialModule")]),t._v("。")])]),t._v(" "),e("h2",{attrs:{id:"下一步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下一步"}},[t._v("#")]),t._v(" 下一步")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://code.visualstudio.com/docs/editor/extension-gallery",target:"_blank",rel:"noopener noreferrer"}},[t._v("插件市场"),e("OutboundLink")],1),t._v(" - 学习更多 VS Code 插件市场的有关内容。")]),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/working-with-extensions/testing-extension.html"}},[t._v("测试插件")]),t._v(" - 测试插件，提高项目质量。")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/working-with-extensions/continuous-integration.html"}},[t._v("持续集成")]),t._v(" - 使用 Azure Pipeline 运行插件的 CI 构建。")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);